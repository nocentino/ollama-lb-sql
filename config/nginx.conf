worker_processes auto;

events {
    worker_connections 4096;
}

http {
    log_format timed_combined '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent" '
        'rt=$request_time ut=$upstream_response_time';

    access_log /var/log/nginx/access.log timed_combined;

    upstream ollama {
        least_conn;
        server host.docker.internal:11434;
        server host.docker.internal:11435;
        server host.docker.internal:11436;
        server host.docker.internal:11437;
        keepalive 256;
    }

    upstream ollama_single {
        server host.docker.internal:11434;
        keepalive 256;
    }

    server {
        listen 443 ssl;
        server_name model.example.com;

        ssl_certificate /etc/nginx/certs/nginx.crt;
        ssl_certificate_key /etc/nginx/certs/nginx.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://ollama;
            proxy_ssl_verify off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";  # <--- Add this line
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin '';
            proxy_set_header Referer '';
        }
    }

    server {
        listen 444 ssl;
        server_name single.example.com;

        ssl_certificate /etc/nginx/certs/nginx.crt;
        ssl_certificate_key /etc/nginx/certs/nginx.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://ollama_single;
            proxy_ssl_verify off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";  # <--- Add this line
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin '';
            proxy_set_header Referer '';
        }
    }
}